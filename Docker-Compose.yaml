services:

  postgres:
    image: postgres:16.2
    hostname: postgres-16.2-bbt3104-lab6
    container_name: postgres-16.2-bbt3104-lab6
    restart: always
    shm_size: 1g
    ports:
      - 5433:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 5trathm0re
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./container-volumes/postgresql/var-lib-postgresql-data:/var/lib/postgresql/data
      - ./container-volumes/postgresql/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./container-volumes/postgresql/pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
    command: postgres -c 'config_file=/etc/postgresql/postgresql.conf'

  pgadmin4:
    image: elestio/pgadmin:REL-8_13
    hostname: pgadmin-REL-8_13-bbt3104-lab6
    container_name: pgadmin-REL-8_13-bbt3104-lab6
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@strathmore.edu
      PGADMIN_DEFAULT_PASSWORD: 5trathm0re
      PGADMIN_LISTEN_PORT: 8080
    ports:
    - 8081:8080
    volumes:
      - ./container-volumes/postgresql/pgadmin/servers.json:/pgadmin4/servers.json

  mysql-8.3.0:
    image: mysql:8.3.0
    hostname: mysql-8.3.0
    container_name: mysql-8.3.0
    ports:
      - 3307:3306
    environment:
      MYSQL_ROOT_PASSWORD: 5trathm0re
    volumes:
      # To store the server's configuration file in the host
      - mysql-config:/etc/mysql/
      # To store the server's log files in the host
      - mysql-log:/var/log/mysql/
      # To store the server's data persistently in the host
      - mysql-data:/var/lib/mysql
      # To run the SQL scripts used to create the required databases
      - mysql-init:/docker-entrypoint-initdb.d/
    command: >
      /bin/bash -c "
      chmod 644 /etc/mysql/my.cnf &&
      chmod 644 /etc/mysql/conf.d/docker.cnf &&
      chmod 644 /etc/mysql/conf.d/mysql.cnf &&
      exec docker-entrypoint.sh mysqld
      "

volumes:
  mysql-config:
    driver: local # The volume will be stored locally on the host machine
    driver_opts:
      type: none # Binds to the path specified in "device" instead of creating a new directory/file on the host
      o: bind # Confirms that Docker maps a directory/file on the host directly into the container
      device: ./container-volumes/mysql/etc-mysql/
  mysql-log:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./container-volumes/mysql/var-log-mysql
  mysql-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./container-volumes/mysql/var-lib-mysql/
  mysql-init:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./container-volumes/mysql/init-scripts/
