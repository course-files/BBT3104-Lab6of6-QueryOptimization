- query: "/*\nCredit: \nKipf, A., Kipf, T., Radke, B., Leis, V., Boncz, P., & Kemper,
    A. (2019).\nLearned cardinalities: Estimating correlated joins with deep learning.\n
    9th Biennial Conference on Innovative Data Systems Research (CIDR â€˜19), CA,
    USA.\nhttps://arxiv.org/abs/1809.00677\n\n\"JOB-light\" contains 3 of the original
    113 JOB queries.\nAs outlined by Kipf et al. (2019), JOB-light:\n1. Does not contain
    any predicates on strings or disjunctions\n2. Contains only queries with 1-4 joins\n
    3. Has mostly equality predicates on dimension table attributes\n4. The only range
    predicate is on production_year\n*/\n\n/* NOTE: These are simply the first 3 queries
    in 'JOB-light-70.sql'\n   The queries are being used to test the computation of
    multiple q-error\n   values.\n*/\nSELECT COUNT(*) FROM movie_companies mc,title
    t,movie_info_idx mi_idx WHERE t.id=mc.movie_id AND t.id=mi_idx.movie_id AND mi_idx.info_type_id=112
    AND mc.company_type_id=2;\nSELECT COUNT(*) FROM movie_companies mc,title t,movie_info_idx
    mi_idx WHERE t.id=mc.movie_id AND t.id=mi_idx.movie_id AND mi_idx.info_type_id=113
    AND mc.company_type_id=2 AND t.production_year>2005 AND t.production_year<2010;\n
    SELECT COUNT(*) FROM movie_companies mc,title t,movie_info_idx mi_idx WHERE t.id=mc.movie_id
    AND t.id=mi_idx.movie_id AND mi_idx.info_type_id=112 AND mc.company_type_id=2
    AND t.production_year>2010;"
  qep:
  - node: 'Aggregate: count(0) (cost=1444 rows=1) (actual time=8.1..8.1 rows=1 loops=1)'
    actual_rows: 1.0
    estimated_rows: 1.0
    q_error: 1.0
  - node: Nested loop inner join (cost=1403 rows=405) (actual time=0.29..8.07 rows=715
      loops=1)
    actual_rows: 715.0
    estimated_rows: 405.0
    q_error: 1.7654320987654322
  - node: Nested loop inner join (cost=548 rows=250) (actual time=0.203..0.666 rows=250
      loops=1)
    actual_rows: 250.0
    estimated_rows: 250.0
    q_error: 1.0
  - node: Index lookup on mi_idx using info_type_id_movie_info_idx (info_type_id=112)
      (cost=275 rows=250) (actual time=0.183..0.208 rows=250 loops=1)
    actual_rows: 250.0
    estimated_rows: 250.0
    q_error: 1.0
  - node: Single-row covering index lookup on t using PRIMARY (id=mi_idx.movie_id)
      (cost=0.992 rows=1) (actual time=0.00172..0.00173 rows=1 loops=250)
    actual_rows: 1.0
    estimated_rows: 1.0
    q_error: 1.0
  - node: 'Filter: (mc.company_type_id = 2) (cost=3.1 rows=1.62) (actual time=0.0281..0.0294
      rows=2.86 loops=250)'
    actual_rows: 2.86
    estimated_rows: 1.62
    q_error: 1.765432098765432
  - node: Index lookup on mc using movie_id_movie_companies (movie_id=mi_idx.movie_id)
      (cost=3.1 rows=3.24) (actual time=0.00709..0.0283 rows=33.2 loops=250)
    actual_rows: 33.2
    estimated_rows: 3.24
    q_error: 10.246913580246913
